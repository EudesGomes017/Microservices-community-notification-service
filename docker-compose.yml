version: "3.8"
services:
  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - community-net

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - community-net

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - community-net

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8088:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - community-net

  # Center Service
  center-service:
    build:
      context: ./center-service
      dockerfile: Dockerfile
    container_name: center-service
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - mongodb
    environment:
      SPRING_PROFILES_ACTIVE: dev
    networks:
      - community-net

  # Notification Service
  notification-service:
    build:
      context: ../notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - mongodb
    environment:
      SPRING_PROFILES_ACTIVE: dev
    networks:
      - community-net

volumes:
  mongo-data:

networks:
  community-net:
    driver: bridge
